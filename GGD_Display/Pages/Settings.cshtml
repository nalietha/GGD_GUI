@page
@model GGD_Display.Pages.SettingsModel
@{
    ViewData["Title"] = "Settings";
}

@Html.AntiForgeryToken()
<div class="max-w-3xl mx-auto p-6 text-gray-800">
    <h2 class="text-2xl font-bold text-white mb-6">Settings</h2>

    <form method="post">
        <div class="mb-6 p-4 bg-gray-100 border rounded">


            @{
                int min = 16, max = 255;
                var ticks = new List<(int value, string label)>
                        {
                        (16, "Min"),
                        (80, "Low"),
                        (128, "Med"),
                        (192, "High"),
                        (255, "Max")
                        };
            }
            <div class="bg-white text-black p-4 rounded shadow mb-6">
                <label for="Brightness" class="block font-semibold mb-2">Brightness</label>

                <!-- Min / Value / Max line -->
                <div class="flex justify-between text-sm text-gray-700 mb-1">
                    <span>Min: @min</span>
                    <span id="brightnessValue" class="font-mono text-black">@Model.Brightness</span>
                    <span>Max: @max</span>
                </div>

                <!-- Slider -->
                <input type="range"
                       id="Brightness"
                       name="Brightness"
                       min="@min"
                       max="@max"
                       step="1"
                       value="@Model.Brightness"
                       oninput="document.getElementById('brightnessValue').textContent = this.value"
                       class="w-full h-2 bg-gray-300 rounded-lg appearance-none cursor-pointer
                  [&::-webkit-slider-thumb]:appearance-none
                  [&::-webkit-slider-thumb]:h-5
                  [&::-webkit-slider-thumb]:w-5
                  [&::-webkit-slider-thumb]:rounded-full
                  [&::-webkit-slider-thumb]:bg-blue-600
                  [&::-webkit-slider-thumb]:border-2
                  [&::-webkit-slider-thumb]:border-white
                  [&::-webkit-slider-thumb]:shadow" />

                <!-- Ticks and labels -->
                <div class="relative mt-4 h-10 w-full">
                    @foreach (var (value, label) in ticks)
                    {
                        var percent = ((value - min) / (double)(max - min)) * 100;
                        <div class="absolute" style="left:@($"{percent}%"); transform: translateX(-50%);">
                            <div class="w-px h-3 bg-gray-500 mx-auto"></div>
                            <button type="button"
                                    onclick="setBrightness(@value)"
                                    class="text-xs text-gray-700 hover:underline mt-1">
                                @label
                            </button>
                        </div>
                    }
                </div>
            </div>

        <div class="mb-6">
            <label class="inline-flex items-center">
                    <input id="ckbx_StreamerMode" type="checkbox" name="StreamerEnabled" class="mr-2" @(Model.StreamerEnabled ? "checked" : "") onchange="toggleStreamerMode()" />
                Disable Streamer Mode
            </label>
            <p class="text-sm text-gray-600">Disable if you want the system to run without live streamer checks.</p>
        </div>

        <div class="mb-6">
            <label class="inline-flex items-center">
                    <input id="ckbx_AdultContent" type="checkbox" name="AdultContentCheckEnabled" class="mr-2" @(Model.AdultContentCheckEnabled ? "checked" : "") onchange="toggleAdultContent()" />
                Allow 18+ Content Checks
            </label>
            <p class="text-sm text-gray-600">Enables age-restricted streamer platform integrations.</p>
        </div>

        <div class="mb-6">
            <label class="font-semibold">Privacy: Show Online Status</label>
            <input type="checkbox" id="privacy" class="ml-2" />
            <p class="text-sm text-gray-500">Enable full Twitch integration visibility.</p>
        </div>

        </div>
        <div class="mb-6 p-4 bg-gray-100 border rounded">
            <h3 class="font-semibold mb-2">Twitch Integration Disclaimer</h3>
            <p class="text-sm">This app uses Twitch API to temporarily retrieve:</p>
            <ul class="list-disc pl-6 text-sm text-gray-700">
                <li>Your Twitch username</li>
                <li>Followed channels</li>
                <li>Subscribed channels</li>
            </ul>
            <p class="text-sm mt-2">None of this data is stored or shared externally.</p>
        </div>

        <div class="mb-6 p-4 bg-gray-100 border rounded">
            <h3 class="font-semibold mb-2">WiFi Disclaimer</h3>
            <p class="text-sm mb-2">
                <strong>NOT IMPLEMENTED</strong> Network changes start a 2-hour utility timer. If not connected in time, the Pi will fall back to AP mode. You can reset it manually.
            </p>
            <label class="inline-flex items-center">
                <input type="checkbox" id="acknowledgeDisclaimer" class="mr-2" />
                I understand and acknowledge
            </label>
        </div>

        <div id="wifiSettings" class="mb-6 p-4 border rounded bg-gray-50">
            <h3 class="font-semibold mb-2">WiFi Configuration</h3>
            <div class="mb-3">
                <label for="wifiUsername" class="block"><strong>NOT IMPLEMENTED</strong>WiFi Username</label>
                <input type="text" id="wifiUsername" name="wifiUsername" class="w-full border p-2 rounded" placeholder="Enter SSID" />
            </div>
            <div class="mb-3">
                <label for="wifiPassword" class="block">WiFi Password</label>
                <input type="password" id="wifiPassword" name="wifiPassword" class="w-full border p-2 rounded" placeholder="Enter password" />
            </div>
        </div>

        <div class="mb-6 p-4 bg-gray-100 border rounded">
            <h3 class="font-semibold mb-2">Privacy Disclaimer: WiFi Usage</h3>
            <p class="text-sm">
                WiFi credentials are transmitted locally to your Raspberry Pi. They are not logged, stored, or sent to any external services.
            </p>
        </div>

        <div class="flex justify-between mt-6">
            <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded">
                💾 Save Settings
            </button>
            <button type="button" onclick="location.reload()" class="text-gray-500 hover:text-black">
                Cancel
            </button>
        </div>
    </form>
</div>
