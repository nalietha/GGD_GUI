@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
    var sortedStreamers = Model.Streamers.OrderBy(s => s.Name).ToList();
}

@Html.AntiForgeryToken()

<div class="grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 gap-4">
    @for (int i = 0; i < 16; i++)
    {
        var node = Model.Canvases[i];
        var assignedId = Model.Canvases[i].LinkedStreamerId;

        var linkedStreamer = Model.Streamers.FirstOrDefault(s => s.PrivateId == node.LinkedStreamerId);
        var isLive = linkedStreamer?.IsLive ?? false;
        var liveClass = isLive ? "bg-green-500 animate-pulse" : "bg-red-500";

        var canvas = Model.Canvases.FirstOrDefault(c => c.NodeId == i);
        var title = Model.GetStreamerNameForNode(i);


        // Use streamer color or fallback
        var boxColor = !string.IsNullOrEmpty(linkedStreamer?.StreamerColor)
        ? linkedStreamer.StreamerColor
        : "#000000";

        var altColor = !string.IsNullOrEmpty(linkedStreamer?.AltColorHex)
        ? linkedStreamer.AltColorHex
        : "#222222";


        <div class="flex flex-col h-full justify-between">
            <div id="canvas-@i"
                 class="canvas-box relative max-w-full overflow-hidden"
                 style="transform-origin: @(i % 8 < 4 ? "left center" : "right center");"
                 onmouseenter="enlargeCanvas(@i)"
                 onmouseleave="shrinkCanvas(@i)"
                 onclick="lockCanvas(@i)">

                <div id="lock-icon-@i"
                     class="absolute top-2 left-2 text-white bg-black bg-opacity-50 p-1 rounded hidden cursor-pointer z-10"
                     title="Click to unlock"
                     onclick="event.stopPropagation(); toggleLockCanvas(@i)">
                    🔒
                </div>

                <span class="node-id-indicator absolute top-2 right-2 text-xs text-gray-400 hidden canvas-box-expanded:inline-block">
                    Node ID: @(i + 1)
                </span>

                <h3 id="canvas-title-@i" class="text-black flex items-center gap-2">
                    <span id="liveStatus-@i"
                          class="w-3 h-3 rounded-full inline-block border border-white @liveClass shrink-0" style="flex-shrink: 0;"
                          title="@(isLive ? "Live" : "Offline")">
                    </span>

                    @if (!string.IsNullOrEmpty(linkedStreamer?.PublicStreamerId))
                    {
                        <a href="https://twitch.tv/@linkedStreamer.Name"
                           id="streamerNameLink-@i"
                           target="_blank"
                           rel="noopener noreferrer"
                           class="text-m font-semibold underline hover:text-purple-600">
                            <span id="streamerNameText-@i">@linkedStreamer.Name</span>
                        </a>
                    }
                    else
                    {
                        <span id="streamerNameText-@i">Canvas @(i+1)</span>
                    }

                </h3>

                <div class="flex gap-2 items-center mt-2">
                    <!-- Main Color -->
                    <div id="colorBox-@i"
                         class="w-full h-8 rounded border-black color-box cursor-pointer "
                         style="background-color: @boxColor"
                         title="Primary color – click to change"
                         onclick="showColorPicker(@i, event, false)">
                    </div>

                    <!-- Alt Color -->
                    <div id="altColorBox-@i"
                         class="w-6 h-6 rounded border-black cursor-pointer"
                         style="background-color: @altColor"
                         title="Alt color – click to change"
                         onclick="showColorPicker(@i, event, true)">
                    </div>
                </div>

                <div class="relative z-50">
                    <!-- Hidden Pickers -->
                    <input type="color" id="colorPicker-@i" class="absolute hidden z-50"
                           onchange="updateNodeColor(@i, this.value, false)">
                    <input type="color" id="altColorPicker-@i" class="absolute hidden z-50"
                           onchange="updateNodeColor(@i, this.value, true)">
                </div>

                <select id="streamerSelectionNode-@i"
                        class="w-full border px-2 py-1 rounded streamer-ddMenu"
                        onchange="updateLinkedStreamer(@i, this.value)">
                    <option value="" disabled selected>Select Streamer</option>

                    @foreach (var s in sortedStreamers)
                    {
                        var selected = string.IsNullOrEmpty(assignedId)
                        ? s == sortedStreamers.First() ? "selected" : ""
                        : assignedId == s.PrivateId ? "selected" : "";

                        <option value="@s.PrivateId">@s.Name</option>
                    }
                </select>

                <div class="lighting-mode-section mt-auto" style="flex-shrink: 0;">
                    <h4>Lighting Mode</h4>
                    <div class="mode-options flex overflow-x-auto no-scrollbar gap-2 py-1">
                        @foreach (var mode in Model.LightingModes)
                        {
                            <button class="w-10 h-10 rounded-full flex items-center justify-center text-sm bg-gray-200 shrink-0" title="@mode.Name">
                                <span>@mode.Icon</span>
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Add Streamer Modal -->
    <div id="addStreamerModal" class="hidden fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50">
        <div class="bg-gray-800 text-white p-6 rounded-lg max-w-md w-full shadow-xl">
            <h2 class="text-lg font-bold mb-4">Add Streamers</h2>

            <textarea id="streamerInput" class="w-full text-black p-2 rounded" rows="4"
                      placeholder="Enter streamer names or Twitch URLs (one per line)"></textarea>

            <div class="flex justify-end mt-4 gap-2">
                <button onclick="submitStreamers()" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded">
                    ➕ Add
                </button>
                <button onclick="closeStreamerModal()" class="bg-red-600 hover:bg-red-700 px-4 py-2 rounded">
                    ✖ Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<div>
    <button onclick="openStreamerModal()" class="bg-purple-600 text-white px-3 py-1 rounded hover:bg-purple-700">
        ➕ Add Streamers
    </button>

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>


